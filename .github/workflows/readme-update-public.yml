name: Update Devportal Documentation

on:
  push:
    paths:
      - 'README.md'
      - 'docs/basic_requirements.md'
      - 'docs/development_guide.md'
      - 'docs/launching_enveloping.md'

jobs:
  update-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 1: Clone the Public Docusaurus Repository
      - name: Clone Docusaurus Repository
        run: |
          git clone https://github.com/ivegabr/docs-test.git
          cd docs-test
          git checkout -b update-from-docs || git checkout update-from-docs
          cd ..

      # Step 2: Transform Each File and Copy to Docusaurus Repository
      - name: Transform Files for Docusaurus
        run: |
          mkdir -p transformed

          # Process README.md
          echo "---" > transformed/README.md
          echo "sidebar_position: 2" >> transformed/README.md
          echo "title: Introduction" >> transformed/README.md
          echo "---" >> transformed/README.md
          echo "" >> transformed/README.md
          echo "# Introduction" >> transformed/README.md
          echo "" >> transformed/README.md
          echo ":::info[Note]" >> transformed/README.md
          echo "This content is automatically updated from the repository, in this case from the README.md file. Notice that the links to other documents are working properly." >> transformed/README.md
          echo ":::" >> transformed/README.md
          echo "" >> transformed/README.md
          cat README.md >> transformed/README.md
          cp transformed/README.md docs-test/docs/rif-relay/readme.md

          # Process basic_requirements.md
          echo "---" > transformed/basic_requirements.md
          echo "sidebar_position: 1" >> transformed/basic_requirements.md
          echo "title: Basic Requirements" >> transformed/basic_requirements.md
          echo "---" >> transformed/basic_requirements.md
          echo "" >> transformed/basic_requirements.md
          echo ":::info[Note]" >> transformed/basic_requirements.md
          echo "This content is automatically updated from the repository, in this case from the basic_requirements.md file." >> transformed/basic_requirements.md
          echo ":::" >> transformed/basic_requirements.md
          echo "" >> transformed/basic_requirements.md
          cat docs/basic_requirements.md >> transformed/basic_requirements.md
          cp transformed/basic_requirements.md docs-test/docs/rif-relay/basic_requirements.md

          # Process development_guide.md
          echo "---" > transformed/development_guide.md
          echo "sidebar_position: 3" >> transformed/development_guide.md
          echo "title: Development Guide" >> transformed/development_guide.md
          echo "---" >> transformed/development_guide.md
          echo "" >> transformed/development_guide.md
          echo ":::info[Note]" >> transformed/development_guide.md
          echo "This content is automatically updated from the repository, in this case from the development_guide.md file." >> transformed/development_guide.md
          echo ":::" >> transformed/development_guide.md
          echo "" >> transformed/development_guide.md
          cat docs/development_guide.md >> transformed/development_guide.md
          cp transformed/development_guide.md docs-test/docs/rif-relay/development_guide.md

          # Process launching_enveloping.md
          echo "---" > transformed/launching_enveloping.md
          echo "sidebar_position: 2" >> transformed/launching_enveloping.md
          echo "title: Launching Enveloping" >> transformed/launching_enveloping.md
          echo "---" >> transformed/launching_enveloping.md
          echo "" >> transformed/launching_enveloping.md
          echo ":::info[Note]" >> transformed/launching_enveloping.md
          echo "This content is automatically updated from the repository, in this case from the launching_enveloping.md file." >> transformed/launching_enveloping.md
          echo ":::" >> transformed/launching_enveloping.md
          echo "" >> transformed/launching_enveloping.md
          cat docs/launching_enveloping.md >> transformed/launching_enveloping.md
          cp transformed/launching_enveloping.md docs-test/docs/rif-relay/launching_enveloping.md

    #   # Step 3: Commit and Push Changes to the Public Docusaurus Repository
    #   - name: Commit and Push Changes
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     run: |
    #       cd docs-test
    #       git config user.name "github-actions[bot]"
    #       git config user.email "github-actions[bot]@users.noreply.github.com"
    #       git add docs/rif-relay/*.md 
    #       git commit -m "Automated update of documentation files"
    #       git push -u origin update-from-docs --force

        # Step 3: Commit and Push Changes to the Public Docusaurus Repository Using GitHub API
      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the latest commit SHA from the main branch
          REPO_OWNER="ivegabr"
          REPO_NAME="docs-test"
          BRANCH_NAME="update-from-docs"

          # Get the default branch's latest commit SHA
          MAIN_SHA=$(curl -s -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/git/refs/heads/main | jq -r '.object.sha')

          # Create or update the branch
          curl -s -X POST -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/git/refs \
            -d "{\"ref\": \"refs/heads/${BRANCH_NAME}\", \"sha\": \"${MAIN_SHA}\"}" || \
          curl -s -X PATCH -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/git/refs/heads/${BRANCH_NAME} \
            -d "{\"sha\": \"${MAIN_SHA}\"}"

          # Get the current content of the file and prepare it for upload
          for FILE in docs/rif-relay/*.md; do
            BASE64_CONTENT=$(base64 -w 0 "$FILE")
            FILE_NAME=$(basename "$FILE")
            CONTENT_SHA=$(curl -s -H "Authorization: Bearer ${GITHUB_TOKEN}" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/contents/$FILE | jq -r '.sha')

            # Update the file
            curl -s -X PUT -H "Authorization: Bearer ${GITHUB_TOKEN}" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/contents/docs/rif-relay/${FILE_NAME} \
              -d @- << EOF
            {
              "message": "Automated update of documentation files",
              "content": "${BASE64_CONTENT}",
              "branch": "${BRANCH_NAME}",
              "sha": "${CONTENT_SHA}"
            }
          EOF
          done


      # Step 4: Create a Pull Request in the Docusaurus Repository
      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -L -X POST -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/ivegabr/docs-test/pulls \
          -d '{"title":"Automated update of documentation","body":"This PR updates the Docusaurus documentation with the latest changes.","head":"update-from-docs","base":"main"}'


          